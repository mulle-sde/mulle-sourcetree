#! /usr/bin/env mulle-bash
# shellcheck shell=bash
#
#   Copyright (c) 2022 Nat! - Mulle kybernetiK
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
#   Neither the name of Mulle kybernetiK nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#
[ "${TRACE:-}" = 'YES' -o "${MULLE_SOURCETREE_EXPORT_GIT_TRACE:-}" = 'YES' ] && set -x && : "$0" "$@"


MULLE_EXECUTABLE_VERSION="0.0.1"


usage()
{
      cat <<EOF >&2
Usage:
   mulle-sourcetree-export-git [config]

   Read a mulle-sourcetree config file and convert it into a git commands
   to add submodules.

   * config    : the sourcetree file (.mulle/etc/sourcetree/config)

EOF
      exit 1
}



git_export_callback()
{
   log_entry "git_export_callback" "$@"

   local _evaledurl
   local _evalednodetype
   local _evaledbranch
   local _evaledtag
   local _evaledfetchoptions

   sourcetree::node::__evaluate_values

   local repo

   if [ -z "${_evaledurl}" ]
   then
      log_verbose "Node \"${_address}\" without URL skipped"
      return
   fi

   case "${_evalednodetype}" in
      git)
      ;;

      tar|zip)
         local scheme
         local host
         local domain
         local scm
         local user
         local repo
         local branch
         local tag

         eval `mulle-domain parse "${_evaledurl}"`

         _evaledurl="https://${host}/${user}/${repo}"
      ;;

      *)
         log_verbose "Nodetype \"${_evalednodetype}\" skipped"
         return
      ;;
   esac

   local dst

   dst="${_filename#${MULLE_SOURCETREE_STASH_DIR/}}"
   if [ "${dst}" != "${_filename}" ]
   then
      r_filepath_concat "stash" "${dst}"
      dst="${RVAL}"
   fi

   printf "git submodule add %q %q\n" "${_evaledurl}" "${dst}"
}


main()
{
   local OPTION_SHAREDIR

   #
   # simple option handling
   #
   while [ $# -ne 0 ]
   do
      if options_technical_flags "$1"
      then
         shift
         continue
      fi

      case "$1" in
         -h*|--help|help)
            usage "${MULLE_TRACE}"
         ;;

         --version)
            printf "%s\n" "${MULLE_EXECUTABLE_VERSION}"
            exit 0
         ;;

         -*)
            log_error "${MULLE_EXECUTABLE_FAIL_PREFIX}: Unknown flag \"$1\""
            usage "${MULLE_TRACE}"
         ;;

         *)
            break
         ;;
      esac

      shift
   done

   options_setup_trace "${MULLE_TRACE}" && set -x

   CONFIG="${1:-.mulle/etc/sourcetree/config}"

   include "array"
   include "sourcetree::environment"

   sourcetree::environment::setup "${OPTION_SHAREDIR}"

   include "sourcetree::node"
   include "sourcetree::walk"


   sourcetree::walk::main --pre-order \
                          --lenient \
                          --no-eval \
                          --qualifier 'MATCHES fetch' \
                          git_export_callback
}


call_with_flags "main" "${MULLE_SOURCETREE_EXPORT_GIT_FLAGS}" "$@"
