#! /usr/bin/env mulle-bash
#
#   Copyright (c) 2021-2022 Nat! - Mulle kybernetiK
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
#   Neither the name of Mulle kybernetiK nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#
[ "${TRACE:-}" = 'YES' -o "${MULLE_SOURCETREE_GRAPH_TRACE:-}" = 'YES' ] && set -x && : "$0" "$@"


MULLE_EXECUTABLE_VERSION=1.0.0


usage()
{
   cat <<EOF >&2
Usage:
   mulle-sourcetree-graph [options] [direction [level [dedupe]]]

   Create a pretty SVG picture of your projects dependencies as they
   are stored in the mulle-sourcetree. The sourcetree must have been synced
   before the picture can be rendered completely. The default graph is
   prettier, but many edges (arrows) are hidden for simplification.

   Needs the "dot" command (graphviz) to be installed.

   You can have permanent per-project settings for GRAPH_LIBRARIES,
   GRAPH_DEDUPE, GRAPH_MAX_LEVEL, GRAPH_DIRECTION, GRAPH_OPTIONS by storing
   them in ".mulle/etc/sourcetree/graph/environment". These values will
   override any environment variables.

   Example:
      mkdir -p .mulle/etc/sourcetree/graph
      echo "GRAPH_MAX_LEVEL=5" >> .mulle/etc/sourcetree/graph/environment

   You can override GRAPH_DIRECTION, GRAPH_MAX_LEVEL, GRAPH_DEDUPE with
   arguments on the commandline, which will override any environment and
   per-project settings.

Options:
   --[png|svg|dot] : output format

Environment:
   GRAPH_DEDUPE    : set to NO to show all edges. (${GRAPH_DEDUPE})
   GRAPH_DIRECTION : set graph direction to TD or LR (${GRAPH_DIRECTION})
   GRAPH_IGNORES   : dont graph and traverse these dependencies ($GRAPH_IGNORES)
   GRAPH_LEAFS     : stop graph traversal at these dependencies ($GRAPH_LEAFS)
   GRAPH_LIBRARIES : set to YES to also dump libraries. (${GRAPH_LIBRARIES})
   GRAPH_MAX_LEVEL : set maximum recursion depth (${GRAPH_MAX_LEVEL})
   GRAPH_OPTIONS   : options for mulle-sourcetree walk (${GRAPH_OPTIONS})

EOF
   exit 1
}


dot_dump()
(
   log_entry dot_dump "$@"

   local direction="$1"
   local level="$2"
   local dedupe="$3"
   local libraries="$4"
   local ignorelist="$5"
   local options="$6"
   local nodetypes="$7"

   shift 7

   cat <<EOF
digraph sourcetree
{
   rankdir = ${direction};
   node [ shape="box"; style="filled" ]
EOF

   r_basename "${PWD}"
   WALK_PARENT="${RVAL}"

   echo "   \"${WALK_PARENT}\"  [ fillcolor=\"yellow\"]"

   if [ ! -z "${GRAPH_HEADER}" ]
   then
      echo "${GRAPH_HEADER}"
   fi

   local descendqualifier


   (
      if [ "${dedupe}" = 'NO' ]
      then
         dedupe="--no-dedupe"
         echo "The non-deduped dependency dump may take a very long time..." >&2
      else
         dedupe=""
      fi

      local exclude_libraries 

      exclude_libraries="MATCHES fs"
      if [ "${libraries}" = 'YES' ]
      then
         exclude_libraries='YES'    # this is a qualifier
      fi

      WALK_PARENT="${WALK_PARENT}" \
         rexekutor mulle-sourcetree \
                               ${MULLE_TECHNICAL_FLAGS} \
                               ${MULLE_SOURCETREE_FLAGS} \
                               walk \
                               --eval-node \
                               --max-walk-level "${level}" \
                               --nodetypes "${nodetypes}" \
                               --qualifier "${exclude_libraries}" \
                               ${dedupe} \
                               ${options} \
                               ${ignorelist} \
                               "$@" \
                               'echo "\"${WALK_PARENT_NAME}\" -> \"${NODE_NAME}\"
\"${NODE_NAME}\" [ href=\"`mulle-domain '"${MULLE_TECHNICAL_FLAGS}"' homepage-url \"${NODE_EVALED_URL:-https://unknown.com}\"`\" ]"'
   ) \
   | sort \
   | sort -u \
   | sed 's/^/   /'  \

   if [ ! -z "${GRAPH_FOOTER}" ]
   then
      echo "${GRAPH_FOOTER}"
   fi

   echo "}"
)



cat_output()
{
   log_entry cat_output "$@"

   local format="${1:-svg}"

   case "${format}" in
      dot)
         cat
      ;;

      *)
         DOT="${DOT:-`command -v dot`}"
         if [ -z "${DOT}" ]
         then
            fail "dot (graphviz) is not in PATH ($PATH)"
         fi
         "${DOT}" -T${format}
      ;;
   esac
}


main()
{
   local OPTION_FORMAT


   # per project settings, if available if we do this before options
   # the usage info is much nicer
   if [ -f .mulle/etc/sourcetree/graph/environment ]
   then
      . .mulle/etc/sourcetree/graph/environment
   fi

   GRAPH_DEDUPE="${GRAPH_DEDUPE:-YES}"
   GRAPH_DIRECTION="${GRAPH_DIRECTION:-TD}"
   GRAPH_LIBRARIES="${GRAPH_LIBRARIES:-NO}"
   GRAPH_MAX_LEVEL="${GRAPH_MAX_LEVEL:-3}"
   GRAPH_OPTIONS="${GRAPH_OPTIONS:---ignore mulle-objc-list}"

   while [ $# -ne 0 ]
   do
      if options_technical_flags "$1"
      then
         shift
         continue
      fi

      case "$1" in
         -h|--help|help)
            usage
         ;;

         --version)
            printf "%s\n" "${MULLE_BASHFUNCTIONS_VERSION}"
            exit 0
         ;;

         --png|--svg|--dot)
            OPTION_FORMAT="${1:2}"
         ;;

         -*)
            log_error "${MULLE_EXECUTABLE_FAIL_PREFIX}: Unknown option \"$1\""
            usage
         ;;

         *)
            break
         ;;
      esac

      shift
   done

   options_setup_trace "${MULLE_TRACE}" && set -x

   log_setting "GRAPH_DEDUPE    : ${GRAPH_DEDUPE}"
   log_setting "GRAPH_DIRECTION : ${GRAPH_DIRECTION}"
   log_setting "GRAPH_LEAFS     : ${GRAPH_LEAFS}"
   log_setting "GRAPH_IGNORES   : ${GRAPH_IGNORES}"
   log_setting "GRAPH_LIBRARIES : ${GRAPH_LIBRARIES}"
   log_setting "GRAPH_MAX_LEVEL : ${GRAPH_MAX_LEVEL}"
   log_setting "GRAPH_OPTIONS   : ${GRAPH_OPTIONS}"
   log_setting "GRAPH_NODETYPES : ${GRAPH_NODETYPES}"

   local direction
   local level
   local dedupe
   local libraries
   local options

   direction="${1:-${GRAPH_DIRECTION}}"
   [ $# -ne 0 ] && shift

   level="${1:-${GRAPH_MAX_LEVEL}}"
   [ $# -ne 0 ] && shift

   dedupe="${1:-${GRAPH_DEDUPE}}"
   [ $# -ne 0 ] && shift

   local ignorelist

   r_split "${GRAPH_LEAFS}" ":"
   r_betwixt " --leaf " "${RVAL[@]}"
   if [ ! -z "${RVAL}" ]
   then
      ignorelist="--leaf ${RVAL}"
   fi

   r_split "${GRAPH_IGNORES}" ":"
   r_betwixt " --ignore " "${RVAL[@]}"
   if [ ! -z "${RVAL}" ]
   then
      r_concat "${ignorelist}" "${RVAL}" " --ignore "
      ignorelist="${RVAL}"
   fi

   libraries="${GRAPH_LIBRARIES}"
   options="${GRAPH_OPTIONS}"

   if [ "${options}" = "NONE" ]
   then
      options=""
   fi

   local nodetypes

   nodetypes="${GRAPH_NODETYPES:-no-local}"
   if [ "${GRAPH_NODETYPES}" = 'local' ]
   then
      nodetypes=
   fi

   r_comma_concat "${nodetypes}" "no-comment,ALL"
   nodetypes=${RVAL}

   dot_dump "${direction}" \
            "${level}" \
            "${dedupe}" \
            "${libraries}" \
            "${ignorelist}" \
            "${options}"  \
            "${nodetypes}" \
   | cat_output "${OPTION_FORMAT}"
}


main "$@"
