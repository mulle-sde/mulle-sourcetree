#! /bin/sh

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"

###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions libexec-dir`" || exit 1
export MULLE_BASHFUNCTIONS_LIBEXEC_DIR
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-boot.sh" || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###


run_mulle_sourcetree()
{
   log_fluff "####################################" >&2
   log_fluff ${MULLE_SOURCETREE} ${MULLE_SOURCETREE_FLAGS:-} "$@"
   log_fluff "####################################" >&2

   (
      set +e
      
      MULLE_SOURCETREE_LIBEXEC_DIR="`${MULLE_SOURCETREE} libexec-dir`"

      . "${MULLE_SOURCETREE}" --no-auto-shell ${MULLE_SOURCETREE_FLAGS:-} "$@"
   )
}


_setup_demo_repo_a()
{
   local reporoot="$1"

   exekutor git init

   exekutor git checkout -b release

   redirect_exekutor VERSION echo "1.0.0"
   exekutor git add VERSION
   exekutor git commit -m "a: 1.0.0"
   exekutor git tag "1.0.0"

   redirect_exekutor VERSION echo "2.0.0"
   exekutor git commit -m "a: 2.0.0" VERSION
   exekutor git tag "2.0.0"

#   exekutor git branch -d master
}


setup_demo_repos()
{
   (
      set -e
      mkdir_if_missing "$1/a" &&
      exekutor cd "$1/a" && _setup_demo_repo_a "$1"
      set +e
   )
}


test_bad_paths()
{
   if run_mulle_sourcetree add --nodetype git --url "${repos}/a" "/tmp/foo"
   then
      _internal_fail "a: failed to complain about absolute path"
   fi
   [ -e ".mulle/etc/sourcetree/config" ] && _internal_fail "a: .mulle/etc/sourcetree/config should not exist"
   [ -e ".mulle/var/sourcetree/db" ]     && _internal_fail "a: .mulle/var/sourcetree/db should not exist"

   if run_mulle_sourcetree add --nodetype git --url "${repos}/a" "../foo"
   then
      _internal_fail "b: failed to complain about escape path"
   fi
   [ -e ".mulle/etc/sourcetree/config" ] && _internal_fail "b: .mulle/etc/sourcetree/config should not exist"
   [ -e ".mulle/var/sourcetree/db" ]     && _internal_fail "b: .mulle/var/sourcetree/db should not exist"

   if run_mulle_sourcetree add --nodetype git --url "${repos}/a" "a/../.."
   then
      _internal_fail "c: failed to complain about escape path"
   fi
   [ -e ".mulle/etc/sourcetree/config" ] && _internal_fail "c: .mulle/etc/sourcetree/config should not exist"
   [ -e ".mulle/var/sourcetree/db" ]     && _internal_fail "c: .mulle/var/sourcetree/db should not exist"

   if run_mulle_sourcetree add --nodetype git --url "${repos}/a" "~foo"
   then
      _internal_fail "d: failed to complain about absolute path"
   fi
   [ -e ".mulle/etc/sourcetree/config" ] && _internal_fail "d: .mulle/etc/sourcetree/config should not exist"
   [ -e ".mulle/var/sourcetree/db" ]     && _internal_fail "d: .mulle/var/sourcetree/db should not exist"

   if run_mulle_sourcetree add --nodetype git --url "${repos}/a" "~/foo"
   then
      _internal_fail "e: failed to complain about absolute path"
   fi
   [ -e ".mulle/etc/sourcetree/config" ] && _internal_fail "e: .mulle/etc/sourcetree/config should not exist"
   [ -e ".mulle/var/sourcetree/db" ]     && _internal_fail "e: .mulle/var/sourcetree/db should not exist"

   :
}


test_simple_add_remove()
{
   if ! run_mulle_sourcetree add --nodetype git --branch release --url "${repos}/a" "foo"
   then
      _internal_fail "a: failed unexpectedly"
   fi
   [ -f ".mulle/etc/sourcetree/config" ] || _internal_fail "a: .mulle/etc/sourcetree/config should exist now ($PWD)"
   [ -e ".mulle/var/sourcetree/db" ]     && _internal_fail "a: .mulle/var/sourcetree/db should not exist ($PWD)"

   # same _url should not work
   if run_mulle_sourcetree add --nodetype git --url "${repos}/a" "foo"
   then
      _internal_fail "b: succeeded unexpectedly"
   fi
   [ -f ".mulle/etc/sourcetree/config" ] || _internal_fail "b: .mulle/etc/sourcetree/config should exist now"
   [ -e ".mulle/var/sourcetree/db" ]     && _internal_fail "b: .mulle/var/sourcetree/db should not exist"

   if ! run_mulle_sourcetree remove "foo"
   then
      _internal_fail "c: failed unexpectedly"
   fi
   [ -e ".mulle/etc/sourcetree/config" ] && _internal_fail "c: .mulle/etc/sourcetree/config should not exist"
   [ -e ".mulle/var/sourcetree/db" ]     && _internal_fail "c: .mulle/var/sourcetree/db should not exist"

   :
}


test_update1()
{
   [ -e ".mulle/var/sourcetree/db" ]     && _internal_fail "a: .mulle/var/sourcetree/db should not exist"
   [ -e "foo" ]                          && _internal_fail "a: foo should not exist"

   if ! run_mulle_sourcetree add --nodetype git --branch release --url "${repos}/a" "foo"
   then
      _internal_fail "a: add failed unexpectedly"
   fi

   [ -e ".mulle/etc/sourcetree/config" ] || _internal_fail "b: .mulle-sourcetree should exist"
   [ -e ".mulle/var/sourcetree/db" ]     && _internal_fail "b: .mulle/var/sourcetree/db should not exist"
   [ -e "foo" ]                          && _internal_fail "b: foo should not exist"

   if ! run_mulle_sourcetree --recursive update
   then
      _internal_fail "b: update failed unexpectedly ($PWD)"
   fi

   [ -e ".mulle/etc/sourcetree/config" ] || _internal_fail "c: .mulle/etc/sourcetree/config should exist"
   [ -e ".mulle/var/sourcetree/db" ]     || _internal_fail "c: .mulle/var/sourcetree/db should exist"
   [ -f "foo/VERSION" ]                  || _internal_fail "c: foo/VERSION should exist"

   if ! run_mulle_sourcetree remove "foo"
   then
      _internal_fail "c: remove failed unexpectedly"
   fi

   [ -e ".mulle/etc/sourcetree/config" ] && _internal_fail "d: .mulle/etc/sourcetree/config should not exist"
   [ -e ".mulle/var/sourcetree/db" ]     || _internal_fail "d: .mulle/var/sourcetree/db should exist"
   [ -f "foo/VERSION" ]                  || _internal_fail "d: foo/VERSION should exist"

   if ! run_mulle_sourcetree --recursive update
   then
      _internal_fail "d: update failed unexpectedly"
   fi

   [ -e ".mulle/etc/sourcetree/config" ]    &&  _internal_fail "e: .mulle/etc/sourcetree/config should not exist"
   [ -e "foo" ]                             && _internal_fail "e: foo should not exist"
   [ -e ".mulle/var/sourcetree/db" ]        || _internal_fail "e: .mulle/var/sourcetree/db should exist"
   [ -e ".mulle/var/sourcetree/graveyard" ] || _internal_fail "e: .mulle/var/sourcetree/graveyard should exist"

   :
}


test_update2()
{
   rm -rf foo 2> /dev/null
   rm -rf .mulle/var/sourcetree/db 2> /dev/null
   rm -f .mulle/etc/sourcetree/config 2> /dev/null

   [ -e ".mulle/etc/sourcetree/config" ] && _internal_fail "a: .mulle/etc/sourcetree/config should not exist anymore"
   [ -e ".mulle/var/sourcetree/db" ]     && _internal_fail "a: .mulle/var/sourcetree/db should not exist"
   [ -e "foo" ]                          && _internal_fail "a: foo should not exist"

   if ! run_mulle_sourcetree add --nodetype git --branch release --url "${repos}/a" "foo"
   then
      _internal_fail "a: add failed unexpectedly"
   fi

   [ -e ".mulle/etc/sourcetree/config" ] || _internal_fail "b: .mulle/etc/sourcetree/config should now exist"
   [ -e ".mulle/var/sourcetree/db" ]     && _internal_fail "b: .mulle/var/sourcetree/db should not exist"
   [ -e "foo" ]                          && _internal_fail "b: foo should not exist"

   if ! run_mulle_sourcetree --recursive update
   then
      _internal_fail "b: update failed unexpectedly"
   fi

   [ -e ".mulle/etc/sourcetree/config" ] || _internal_fail "c: .mulle/etc/sourcetree/config should exist"
   [ -e ".mulle/var/sourcetree/db" ]     || _internal_fail "c: .mulle/var/sourcetree/db should exist"
   [ -f "foo/VERSION" ]                  || _internal_fail "c: foo/VERSION should exist"

   if ! run_mulle_sourcetree set --address "bar" foo
   then
      _internal_fail "c: set failed unexpectedly"
   fi

   [ -e ".mulle/etc/sourcetree/config" ] || _internal_fail "d: .mulle/etc/sourcetree/config should exist"
   [ -e ".mulle/var/sourcetree/db" ]     || _internal_fail "d: .mulle/var/sourcetree/db should exist"
   [ -f "foo/VERSION" ]                  || _internal_fail "d: foo/VERSION should exist"
   [ -f "bar/VERSION" ]                  && _internal_fail "d: bar/VERSION should not exist"

   if ! run_mulle_sourcetree --recursive update
   then
      _internal_fail "d: update failed unexpectedly"
   fi

   [ -e ".mulle/etc/sourcetree/config" ] || _internal_fail "e: .mulle/etc/sourcetree/config should exist"
   [ -e ".mulle/var/sourcetree/db" ]     || _internal_fail "e: .mulle/var/sourcetree/db should exist"
   [ -f "foo/VERSION" ]                  && _internal_fail "e: foo/VERSION should not exist anymore"
   [ -f "bar/VERSION" ]                  || _internal_fail "e: bar/VERSION should exist"

   :
}


main()
{
   MULLE_SOURCETREE_FLAGS="$@"

   _options_mini_main "$@" && set -x

   local directory

   r_make_tmp_directory || exit 1
   directory="${RVAL}"

   SOURCETREE_DB_FILENAME=".mulle/var/sourcetree/db"
   export SOURCETREE_DB_FILENAME
   SOURCETREE_DB_FILENAME_RELATIVE="../../../.."
   export SOURCETREE_DB_FILENAME_RELATIVE

   local project
   local repos

   project="${directory}/project"
   repos="${directory}/repositories"

   setup_demo_repos "${repos}"

   mkdir_if_missing "${project}"
   (
      cd "${project}" &&

      test_bad_paths &&
      log_verbose "----- #1 PASSED -----"
   ) || exit 1

   (
      cd "${project}" &&

      test_simple_add_remove &&
      log_verbose "----- #2 PASSED -----"
   ) || exit 1

   (
      cd "${project}" &&

      test_update1 &&
      log_verbose "----- #3 PASSED -----"
   ) || exit 1

   (
      cd "${project}" &&

      test_update2 &&
      log_verbose "----- #4 PASSED -----"
   ) || exit 1

   log_info "----- ALL PASSED -----"

   rmdir_safer "${directory}"
}


init()
{
   MULLE_SOURCETREE="${MULLE_SOURCETREE:-${PWD}/../../mulle-sourcetree}"
   MULLE_SOURCETREE_LIBEXEC_DIR="`${MULLE_SOURCETREE} library-path`" || exit 1

   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-node.sh"     || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-nodeline.sh" || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-db.sh"       || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-callback.sh" || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-sync.sh"     || exit 1
}


init "$@"
main "$@"

