#! /usr/bin/env bash

[ "${TRACE}" = "YES" ] && set -x


run_mulle_sourcetree()
{
   log_fluff "####################################"
   log_fluff ${MULLE_SOURCETREE} ${MULLE_SOURCETREE_FLAGS} "$@"
   log_fluff "####################################"

   exekutor ${MULLE_SOURCETREE} ${MULLE_SOURCETREE_FLAGS} "$@"
}


expect_content()
{
   local output="$1"
   local expect="$2"

   if [ ! -f "${output}" ]
   then
      if [ -z "${expect}" ]
      then
         return
      fi
      fail "Did not produce \"${output}\" as expected"
   else
      if [ -z "${expect}" ]
      then
         fail "Did produce \"${output}\" unexpectedly. Nothing was expected"
      fi
   fi

   if [ -f "${expect}.${UNAME}" ]
   then
      expect="${expect}.${UNAME}"
   fi

   if [ ! -f "${expect}" ]
   then
      internal_fail "\"${expect}\" is missing from test"
   fi

   local diffs

   diffs="`diff "${output}" "${expect}"`"
   if [ $? -ne 0 ]
   then
      log_error "Unexpected output generated"
      cat <<EOF >&2
----------------
Output: ($output)
----------------
`cat "${output}"`
----------------
Expected: ($expect)
----------------
`cat "${expect}"`
----------------
Diff:
----------------
${diffs}
----------------
EOF
      exit 1
   fi
}


#
# repository has no .mulle-sourcetree in 1.0.0
# repository has a .mulle-sourcetree in 2.0.0
# repository has no .mulle-sourcetree in 3.0.0
#

#
# a->b(->d)
# a->c->d
#
_setup_demo_repo_a()
{
   local reporoot="$1"

   exekutor git init

   redirect_exekutor VERSION echo "1.0.0"
   run_mulle_sourcetree -e add --nodetype git "file:///${reporoot}/b" || exit 1
   run_mulle_sourcetree -e add --nodetype git --url "file:///${reporoot}/d" "c/d" || exit 1
   run_mulle_sourcetree -e list

   exekutor git add VERSION .mulle-sourcetree
   exekutor git commit -m "a: initial version"
}

#
# b->d
#
_setup_demo_repo_b()
{
   local reporoot="$1"

   exekutor git init

   redirect_exekutor VERSION echo "1.1.0"
   run_mulle_sourcetree -e add --nodetype git "file:///${reporoot}/d" || exit 1
   exekutor git add VERSION .mulle-sourcetree
   exekutor git commit -m "b: initial version"
}


_setup_demo_repo_d()
{
   local reporoot="$1"

   exekutor git init

   redirect_exekutor VERSION echo "1.0.0"
   exekutor git add VERSION
   exekutor git commit -m "d: initial version"
}


setup_demo_repos()
{
   (
      mkdir_if_missing "$1/a" &&
      exekutor cd "$1/a" && _setup_demo_repo_a "$1"
      mkdir_if_missing "$1/b" &&
      exekutor cd "$1/b" && _setup_demo_repo_b "$1"
      mkdir_if_missing "$1/d" &&
      exekutor cd "$1/d" && _setup_demo_repo_d "$1"
   ) || exit 1
}


run_dump()
{
   local mode="$1"
   local directory="$2"
   local output="${3:-${mode}.dot}"

   run_mulle_sourcetree --${mode} dotdump > "${output}"
   if [ $? -ne 0 ]
   then
      fail "dotdump failed unexpectedly"
   fi

   expect_content "${output}" "${directory}/${output}"
}


run_test1()
{
   if ! run_mulle_sourcetree add --nodetype git --url "file://${repos}/a" "root/a"
   then
      fail "add failed unexpectedly"
   fi

   if ! run_mulle_sourcetree --recurse update  # > /dev/null 2>&1
   then
      fail "update failed unexpectedly"
   fi

   MULLE_SOURCETREE_SHARE_DIR="stashes"
   export MULLE_SOURCETREE_SHARE_DIR

   run_mulle_sourcetree dotdump --output-html > /dev/null
   if [ $? -ne 0 ]
   then
      fail "dotdump failed unexpectedly"
   fi

   run_dump "flat" "${testdir}"
   run_dump "recurse" "${testdir}"
   run_dump "share" "${testdir}" "share_local.dot"
}



main()
{
   MULLE_SOURCETREE_FLAGS="$@"

   _options_mini_main "$@"

   local directory

   directory="`make_tmp_directory`" || exit 1

   local project

   project="${directory}/project"
   repos="${directory}/repositories"

   setup_demo_repos "${repos}" || exit 1

   log_verbose "----- TEST START -----"

   local testdir

   testdir="${PWD}"
   (
      rmdir_safer "${project}" &&
      mkdir_if_missing "${project}" &&

      MULLE_VIRTUAL_ROOT="`physicalpath "${project}" `"
      export MULLE_VIRTUAL_ROOT

      cd "${project}" &&
      run_test1
   ) || exit 1
   log_verbose "----- #1 PASSED -----"

   log_info "----- ALL PASSED -----"

   rmdir_safer "${directory}"
}


init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env library-path`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

   MULLE_SOURCETREE="${MULLE_SOURCETREE:-${PWD}/../../mulle-sourcetree}"
   MULLE_SOURCETREE_LIBEXEC_DIR="`${MULLE_SOURCETREE} library-path`" || exit 1

   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-node.sh" || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-nodeline.sh" || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-db.sh" || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-walk.sh" || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-dotdump.sh" || exit 1
}


init "$@"
main "$@"

