#! /usr/bin/env bash

[ "${TRACE}" = "YES" ] && set -x


run_mulle_sourcetree()
{
   log_fluff "####################################"
   log_fluff ${MULLE_SOURCETREE} ${MULLE_SOURCETREE_FLAGS} "$@"
   log_fluff "####################################"

   exekutor ${MULLE_SOURCETREE} ${MULLE_SOURCETREE_FLAGS} "$@"
}

#
# repository has no .mulle-sourcetree in 1.0.0
# repository has a .mulle-sourcetree in 2.0.0
# repository has no .mulle-sourcetree in 3.0.0
#
_setup_demo_repo_a()
{
   local reporoot="$1"

   exekutor git init

   redirect_exekutor VERSION echo "1.0.0"
   run_mulle_sourcetree -e add --nodetype git "file:///${reporoot}/b"
   exekutor git add VERSION .mulle-sourcetree
   exekutor git commit -m "a: initial version"
}


_setup_demo_repo_b()
{
   local reporoot="$1"

   exekutor git init

   redirect_exekutor VERSION echo "1.1.0"
   exekutor git add VERSION
   exekutor git commit -m "b: initial version"
}


setup_demo_repos()
{
   (
      set -e
      mkdir_if_missing "$1/a" &&
      exekutor cd "$1/a" && _setup_demo_repo_a "$1"
      mkdir_if_missing "$1/b" &&
      exekutor cd "$1/b" && _setup_demo_repo_b "$1"
      set +e
   ) || exit 1
}


run_test()
{
   MULLE_VIRTUAL_ROOT="${directory}/project"
   export MULLE_VIRTUAL_ROOT

   exekutor mkdir b
   exekutor touch b/DONTDELETEME

   # lets make b a minion, it should not be clobbered by a
   if ! run_mulle_sourcetree add --nodetype git "file://${repos}/a"
   then
      fail "add failed unexpectedly"
   fi

   # node is expected to be local and nodelete
   if ! run_mulle_sourcetree add b
   then
      fail "add failed unexpectedly"
   fi

   if [ "`mulle-sourcetree get b nodetype`" != "local" ]
   then
      fail "minion b is not local"
   fi

   if [ "`mulle-sourcetree get b marks`" != "nodelete" ]
   then
      fail "minion b is not nodelete"
   fi

   log_verbose "----- #1 PASSED -----"

   run_mulle_sourcetree list

   #
   # this should not work, because project is not reachable from the
   # false MULLE_VIRTUAL_ROOT (directory)
   #
   MULLE_VIRTUAL_ROOT="${directory}"

   if run_mulle_sourcetree ${UPDATE_FLAGS} --share update
   then
      fail "update succeeded unexpectedly"
   fi

   log_verbose "----- #2 PASSED -----"

   #
   # now with the proper root though
   #
   MULLE_VIRTUAL_ROOT="${directory}/project"

   if ! run_mulle_sourcetree ${UPDATE_FLAGS} --share update
   then
      fail "update failed unexpectedly"
   fi

   [ -d "a" ]              || fail "a should exist"
   [ -f "b/DONTDELETEME" ] || fail "b/DONTDELETEME should exist"

   log_verbose "----- #3 PASSED -----"

   #
   # minion should not be removed, but a
   #
   if ! run_mulle_sourcetree clean
   then
      fail "update failed unexpectedly"
   fi

   [ -d "a" ]              && fail "a should not exist"
   [ -f "b/DONTDELETEME" ] || fail "b/DONTDELETEME should exist"

   log_verbose "----- #4 PASSED -----"

   MULLE_VIRTUAL_ROOT="${directory}/project"

   #
   # should also work, will defer to root
   #
   cd ${directory}/project/b

   if ! run_mulle_sourcetree ${UPDATE_FLAGS} --share update
   then
      fail "update failed unexpectedly"
   fi

   log_verbose "----- #5 PASSED -----"

}


main()
{
   MULLE_SOURCETREE_FLAGS="$@"

   _options_mini_main "$@"

   local directory

   directory="`make_tmp_directory`" || exit 1

   local project

   project="${directory}/project"
   repos="${directory}/repositories"

   setup_demo_repos "${repos}"

   (
      rmdir_safer "${project}" &&
      mkdir_if_missing "${project}" &&
      cd "${project}" &&

      run_test
   ) || exit 1

   rmdir_safer "${directory}"
}


init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env library-path`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

   MULLE_SOURCETREE="${MULLE_SOURCETREE:-${PWD}/../../mulle-sourcetree}"
   MULLE_SOURCETREE_LIBEXEC_DIR="`${MULLE_SOURCETREE} library-path`" || exit 1

   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-node.sh" || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-nodeline.sh" || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-db.sh" || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-update.sh" || exit 1
}


init "$@"
main "$@"

