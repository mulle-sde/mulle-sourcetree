#! /usr/bin/env bash

[ "${TRACE}" = "YES" ] && set -x


run_mulle_sourcetree()
{
   log_fluff "####################################"
   log_fluff ${MULLE_SOURCETREE} ${MULLE_SOURCETREE_FLAGS} "$@"
   log_fluff "####################################"

   exekutor ${MULLE_SOURCETREE} ${MULLE_SOURCETREE_FLAGS} "$@"
}

#
# repository has no .mulle-sourcetree in 1.0.0
# repository has a .mulle-sourcetree in 2.0.0
# repository has no .mulle-sourcetree in 3.0.0
#
_setup_demo_repo_a()
{
   local reporoot="$1"

   exekutor git init

   redirect_exekutor VERSION echo "1.0.0"
   exekutor git add VERSION
   exekutor git commit -m "a: initial version 1.0.0 (tagged)"
   exekutor git tag "1.0.0"

   redirect_exekutor VERSION echo "2.0.0"
   run_mulle_sourcetree -e add --nodetype git "file:///${reporoot}/b"
   [ -d .mulle-sourcetree ] || fail "failed add"
   exekutor git add VERSION .mulle-sourcetree
   exekutor git commit -m "a: version 2.0.0 (tagged)"
   exekutor git tag "2.0.0"
}


_setup_demo_repo_b()
{
   local reporoot="$1"

   exekutor git init

   redirect_exekutor VERSION echo "1.0.0"
   exekutor git add VERSION
   exekutor git commit -m "b: initial version"
}


setup_demo_repos()
{
   (
      set -e
      mkdir_if_missing "$1/a" &&
      exekutor cd "$1/a"      && _setup_demo_repo_a "$1"
      mkdir_if_missing "$1/b" &&
      exekutor cd "$1/b"      && _setup_demo_repo_b "$1"
      set +e
   ) || exit 1
}


main()
{
   MULLE_SOURCETREE_FLAGS="$@"

   _options_mini_main "$@"

   local directory

   directory="`make_tmp_directory`" || exit 1

   local project

   project="${directory}/project"
   repos="${directory}/repositories"

   MULLE_VIRTUAL_ROOT="${project}"
   export MULLE_VIRTUAL_ROOT

   setup_demo_repos "${repos}"

   mkdir_if_missing "${project}"
   cd "${project}"

   if ! run_mulle_sourcetree add --marks no-delete --nodetype git --tag "2.0.0" "file://${repos}/a"
   then
     fail "add failed unexpectedly"
   fi

   if ! run_mulle_sourcetree --recurse update
   then
      fail "update failed unexpectedly"
   fi

   local result
   local expected="`physicalpath "${project}"`/a/b;
`physicalpath "${project}"`/a;no-delete"

   result="`run_mulle_sourcetree buildorder --marks`"
   if [ "${expected}" != "${result}" ]
   then
      fail "missed expectation:
---
${expected}
---
got
---
${result}
---"
   fi
   log_info "----- #1 PASSED -----"

   if ! run_mulle_sourcetree mark --extended-marks "a" "no-fantasy-os"
   then
     fail "mark failed unexpectedly"
   fi

   # should be the same
   result="`run_mulle_sourcetree buildorder --marks`"
   expected="`physicalpath "${project}"`/a/b;
`physicalpath "${project}"`/a;no-delete,no-fantasy-os"
   if [ "${expected}" != "${result}" ]
   then
      fail "missed expectation:
---
${expected}
---
got
---
${result}
---"
   fi
   log_info "----- #2 PASSED -----"

   if ! run_mulle_sourcetree mark --extended-marks "a" "no-${UNAME}"
   then
     fail "mark failed unexpectedly"
   fi

   #
   # now a should not appear and therefore b misses out too
   #
   local expected=""

   result="`run_mulle_sourcetree -vvv -ld buildorder --marks`"
   if [ "${expected}" != "${result}" ]
   then
      fail "missed expectation:
---
${expected}
---
got
---
${result}
---"
   fi
   log_info "----- #3 PASSED -----"

   log_info "----- ALL PASSED -----"

   rmdir_safer "${directory}"
}


init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env library-path`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

   MULLE_SOURCETREE="${MULLE_SOURCETREE:-${PWD}/../../mulle-sourcetree}"
   MULLE_SOURCETREE_LIBEXEC_DIR="`${MULLE_SOURCETREE} library-path`" || exit 1

   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-node.sh" || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-nodeline.sh" || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-db.sh" || exit 1
   . "${MULLE_SOURCETREE_LIBEXEC_DIR}/mulle-sourcetree-update.sh" || exit 1
}


init "$@"
main "$@"

